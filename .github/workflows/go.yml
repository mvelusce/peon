name: Go

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:

    - name: Set up Go 1.x
      uses: actions/setup-go@v2
      with:
        go-version: ^1.13
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Get dependencies
      run: |
        go get -v -t -d ./...
        if [ -f Gopkg.toml ]; then
            curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
            dep ensure
        fi

    - name: Test
      run: go test -v ./internal/project

    - name: Build
      run: |
        cd cmd/peon/
        go build

#    - name: Checkout code
#      uses: actions/checkout@v2

#    - name: Semantic Release
#      uses: cycjimmy/semantic-release-action@v2
#      with:
#        semantic_version: v0.0.1
#        branch: master
#      env:
#        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

#    - name: Create Release
#      id: create_release
#      uses: actions/create-release@v1
#      env:
#        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
#      with:
#        tag_name: ${{ github.ref }}
#        release_name: Release ${{ github.ref }}
#        body: |
#          Changes in this Release
#          - First Change
#          - Second Change
#        draft: false
#        prerelease: false

#    - name: Upload binaries to release
#      uses: svenstaro/upload-release-action@v2
#      with:
#        repo_token: ${{ secrets.GITHUB_TOKEN }}
#        file: target/release/mything
#        asset_name: mything
#        tag: ${{ github.ref }}
#        overwrite: true
#        body: "This is my release text"
