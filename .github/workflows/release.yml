name: Release

on:
  push:
    branches: [ main ]

jobs:

  release:
    name: Release
    runs-on: ubuntu-latest
    steps:

    - name: Set up Go 1.x
      uses: actions/setup-go@v2
      with:
        go-version: ^1.15
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Get dependencies
      run: |
        go get -v -t -d ./...
        if [ -f Gopkg.toml ]; then
            curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
            dep ensure
        fi

    - name: Test
      run: go test -v ./internal/project

    - name: Release
      run: |
        sh release.sh

    - name: 'Get Previous tag'
      id: previous_tag
      uses: "WyriHaximus/github-action-get-previous-tag@master"

    - name: Changelog
      id: changelog
      uses: heinrichreimer/github-changelog-generator-action@v2.2

    - name: Create Github release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      with:
        tag_name: ${{ steps.previous_tag.outputs.tag }}
        release_name: Release ${{ steps.previous_tag.outputs.tag }}
        body: |
            ${{ steps.changelog.outputs.changelog }}
        draft: false
        prerelease: false

    - name: Upload release asset
      id: upload_release_asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
        asset_path: bin/peon.zip
        asset_name: peon.zip
        asset_content_type: application/zip

    - name: Cleanup
      run: |
        rm -f bin/peon-*
        rm -f bin/peon.zip
        rm -f release-notes.md

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Docker build and push
      run: |
        cd ./docker && ./build_image_docker_hub.sh
